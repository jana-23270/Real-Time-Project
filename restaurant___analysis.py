# -*- coding: utf-8 -*-
"""Restaurant _ analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zI8pb51M47ghZ6qNZDUvmXt7L1j2lIb9
"""

import numpy as np
import pandas as pd

data1 = pd.read_csv('/content/i1.csv')
data1

data2 = pd.read_csv('/content/i2.csv')
data2

data = data1.merge(data2,how = 'outer')

data

data.head(10)

data.tail(5)

data.shape

data.info()

data.describe()

data.describe().T

datas = data.drop(['HSN','Covers','Table No.','Server Name','Variation'],axis=1)

datas

data.shape

data.shape

datas["Invoice No."].unique()

nunique=datas["Invoice No."].nunique()
nunique

datas.isnull().sum()

sum = datas['Final Total'].sum()

sum

aov = sum/nunique
aov

#Average Order Value = total amount/Total Orders
datas["Final Total"].sum()/datas["Invoice No."].nunique()

datas.rename(columns={'Final Total':'AMOUNT',
                      'Qty.':'QUANTITY',
                      'Sub Total': 'SUB_TOTAL',
                      'Table No.':'TABLE_NO',
                      'Date':'DATE',
                      'Timestamp':'TIME',
                      'Invoice No.':'INVOICE_NO',
                      'Price':'PRICE',
                      'Item Name':'ITEM_NAME',
                      'Discount':'DISCOUNT','Category':'CATEGORY'},inplace=True)

datas

grouping = datas.groupby('INVOICE_NO').agg({'INVOICE_NO': lambda x: x.nunique(),
                                            'QUANTITY':lambda x: x.sum(),
                                            'SUB_TOTAL':lambda x: x.sum(),
                                            'AMOUNT': lambda x: x.sum(),
                                            'ITEM_NAME':lambda x:x,

                                            })

grouping

grouping.columns = ['INVOICE_NO','QUANTITY','SUM_TOTAL','AMOUNT','ITEM_NAME']
grouping.columns

grouping

import seaborn as sns
import matplotlib.pyplot as plt

top_10 = datas['ITEM_NAME'].value_counts().nlargest(10)     #witout QUANTITY
sns.barplot(x=top_10.values , y= top_10.index)
plt.xlabel('values')
plt.ylabel('product')
plt.title('Top_10_Product')
plt.show()

TOP_10 = datas.groupby('ITEM_NAME')['QUANTITY'].sum().nlargest(10)         #with QUANTITY
sns.barplot(x=TOP_10.values , y=TOP_10.index)
plt.xlabel('Total quantity')
plt.ylabel('Product')
plt.title('TOP_!0_Product with Total Quantity')
plt.xticks(rotation=45)
plt.yticks(rotation=0)
plt.show()

top_10_1 = datas.groupby('ITEM_NAME')['AMOUNT'].sum().nlargest(10)
sns.barplot(x = top_10_1.values , y=top_10_1.index)
plt.ylabel('amount')
plt.xlabel('Product_name')
plt.title ('TOP_10 using amount based Product')
plt.xticks(rotation=90)
plt.show()

top_10_1

top = datas.groupby('INVOICE_NO')['AMOUNT'].sum().nlargest(10)
top.plot(kind = 'bar' , color='skyblue')
plt.xlabel('Values')
plt.ylabel('Product')
plt.title("Top 10 product")
plt.xticks(rotation=90)
plt.show()

top

from wordcloud import WordCloud

text = ' '.join(datas['ITEM_NAME'].dropna().astype(str).values)

wordcloud = WordCloud(background_color='White',width=800, height=500).generate(text)

fig, ax = plt.subplots(figsize=(10,6))
ax.imshow(wordcloud, interpolation='bilinear')      #interpolation means locating a position
ax.set_title('Word Cloud of Item Column')
ax.set_xticks([])
ax.set_yticks([])
plt.show()

datas['DATE']=pd.to_datetime(datas.DATE,format='%Y-%m-%d')
datas['DATE']

y=datas.groupby(['INVOICE_NO']).sum()
y

y = datas.groupby('ITEM_NAME').sum().sort_values('QUANTITY', ascending=False)[['QUANTITY']][0:25]
sns.barplot(x='QUANTITY', y=y.index , data = y)

name = datas.groupby('ITEM_NAME').sum().sort_values('AMOUNT',ascending=False)[['AMOUNT']][0:25]
sns.barplot(x='AMOUNT',y= name.index , data=name)

name1 = datas.groupby('ITEM_NAME').sum().sort_values('QUANTITY',ascending=False)[['QUANTITY','PRICE','AMOUNT']][0:25]
sns.barplot(x='QUANTITY',y=name1.index, data=name1)

r = datas.groupby(['INVOICE_NO','ITEM_NAME']).sum().sort_values('QUANTITY',ascending=False)[['QUANTITY','PRICE','AMOUNT']][0:25]
r

d = datas[datas['ITEM_NAME'] == 'Butter Naan']
d

L = datas[datas['QUANTITY'] >= 5]
L

a = datas[(datas['ITEM_NAME'] == 'Gulab Jamun') & (datas['QUANTITY'] > 10)]
a

day = datas[(datas['DATE'] == '2023-09-19') & (datas['ITEM_NAME'] == 'Gobi- 65')]
day

#day1 = datas.groupby('INVOICE_NO').sum()

da = datas[datas['ITEM_NAME'] == ('Butter Naan','Kadai Vegetables')]
da

D = datas[(datas['ITEM_NAME']=='Roti')&(datas['QUANTITY']==4)]
D